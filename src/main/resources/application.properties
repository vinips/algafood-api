spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#Seta onde vai ser os scripts do flyway, o testdata é configurado por mim.
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#Propriedade serve para lançar erro caso seja passada uma propriedade no json que não existe na entidade proporcional do Java
spring.jackson.deserialization.fail-on-unknown-properties=true

#Propriedade serve para lançar erro caso seja passada uma propriedade no json que na Entidade Java esteja marcada como @JsonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true

#Caso não exista o caminho expecificado na url ele lança uma exception do tipo NoHandlerFoundException
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#Configuração do tipo de storage que vamos usar, local ou S3. Utilizado nas classes StorageConfig e StorageProperties
algafood.storage.tipo=s3

#Criando uma variavel para o caminho das fotos locais.
algafood.storage.local.diretorio-fotos=C:/dev-temp/images

#Criando as variaveis para o acesso das fotos remotas, nesse caso usando o Amazon S3.
#algafood.storage.s3.id-chave-acesso= ESSA CHAVE FOI COLOCADA DIRETAMENTE NO SERVIDOR DO SPRING. OLHAR AULA 14.20 EM 12:30S
#algafood.storage.s3.chave-acesso-secreta= ESSA CHAVE FOI COLOCADA DIRETAMENTE NO SERVIDOR DO SPRING. OLHAR AULA 14.20 EM 12:30S
algafood.storage.s3.bucket=vinips-algafood
algafood.storage.s3.regiao=sa-east-1
algafood.storage.s3.diretorio-fotos=catalogo

#Propriedades para configurar o servidor SMTP (Envio de e-mail)
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=f3a785e658b4b2
spring.mail.password=f8562ad2cac346
algafood.email.remetente=AlgaFood <naoresponder@algafood.com.br>

#Configuração do tipo de email que vamos usar, Smtp, fake ou sandbox. Utilizado nas classes EmailConfig e EmailProperties
algafood.email.email-impl-type=sandbox

algafood.email.sandbox.destinatario=uchiha.sesc@gmail.com

#Setando o localte do freemarker, para que quando enviarmos e-mail, ele pegar a moeda e as configurações do Brasil.
spring.freemarker.settings.locale=pt_BR

#Limita o tamanho máximo dos arquivos enviados na requisição, como fotos, pdfs, etc. No projeto estamos validando o tamanho com o BeanValidation
#spring.servlet.multipart.max-file-size=20KB

#Faz com quem o Spring mande os Json com snake case "taxa_frete" em vez de lower camel case "taxaFrete" que é o padrão.
#spring.jackson.property-naming-strategy=SNAKE_CASE

#Quando usamos o generate-ddl podemos usar um arquivo de nome padrão "import.sql" para popular o banco.
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

#Essas propriedades geram o código DDL (criação) das entidades no arquivo do create-target. Só precisam executar 1x.
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#Configurações do Hikari, que cuida do nosso pool de conexões com o DB
#Maximum-pool é o numero máximo de conexões abertas
#Minimum é o mínimo de conexões começam e ficam abertas
#Timeout é o tempo que as excedentes entre máximo e mínimo fecham depois do tempo estabelecido.
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3
#spring.datasource.hikari.idle-timeout=10000